1.1) Есть 32-битное число. Требуется подсчитать число установленных в 1 бит.
1.2) Есть массив длины n, состоящий из 32-битных чисел. Требуется найти окно
длины m (m < n), в рамках которого встречается число с минимальным
установленным числом бит.
1.3) То же условие, что и в задаче 2, только считается, что поток, подоваемый
на вход, имеет бесконечную длину.

2.1) Utf-8. Оценить число символов, который можно закодировать при
помощи Utf-8. Реализовать метод, который бы для массива byte[] a вовращал
количество символов в массиве a.
2.2) Задана целочисленная матрица a(nxn). Требуется реализовать две операции:
update(i, j, x) - изменить a[i, j] на x, query(i1, j1, i2, j2) - вернуть сумму
чисел в подматрице a[(i1, j1)x(i2, j2)].
2.3) Требуется реализовать класс с интерфейсом для взятия/отпускания
блокировок, который бы не допускал дедлок, предполагая, что в наличии имеется
api для взятия thread.Id и массив мьютексов.
2.4) Рассмотрим последовательность 1234567891011121314.., составленную из
подряд идущих натуральных чисел. Требуется найти цифру, стоящую на
позиции n (нумерация с 1). Предположим, что на Луне расположен кластер,
с количеством машин до 10'000 (или 100'000). Требуется предложить способ,
позволяющий обновлять ПО (ОС) на машинах, образующих кластер. Количество
недоступных машин кластера не должно превышать 5% (или 10%).
2.5) Требуется разработать компонент, предназначенный для интергации в
существующие web-системы, с возможностью сохранения данных. Например,
компонент для аутентификации.